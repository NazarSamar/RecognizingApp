@page "/getImageClassesSymbols"
@using System 
@using System.IO

@using PictureRecognitionApp.Data
@inject ImageService imageService

<h3>Завантажте файл для розпізнавання класів зображень та вкладеного тексту</h3>


<label for="fileinput" class="btn btn-dark btn-lg btn-block" style="margin:10px;width:100%">
    Завантажити зображення
    <span class="oi oi-paperclip"></span>
    <InputFile id="fileinput" class="custom-input-hide" OnChange="@LoadFiles"/>
</label>
<button class="btn btn-dark btn-lg btn-block" style="margin:10px" @onclick=RecognizeImage>Розпізнати зображення</button>

<style>
    .label-wrapper:hover {
        cursor: pointer;
    }

    .custom-input-hide {
        width: 0;
        height: 0;
        overflow: hidden;
    }
    button
    {
        margin:10px;
        width:100%
    }
    .d-flex
    {
        justify-content: center;
    }
    h3{
        text-align:center;
    }
</style>
 
@if (isLoading)
{   
    <div class="spinner-border" role="status">
		<span class="sr-only">Завантажується...</span>
	</div>
}
else
{
    if (filelocation != "")
    {
        <table class="table table-dark">
            <thead>
                <tr>
                    <th scope="col">Ім'я</th>
                    <th scope="col">Час останнього змінення</th>
                    <th scope="col">Розмір (у байтах)</th>
                    <th scope="col">Тип зображення</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var file in loadedFiles)
                {
                    <tr>
                        <td>@file.Name</td>
                        <td>@file.LastModified.ToString()</td>
                        <td>@file.Size</td>
                        <td>@file.ContentType</td>                    
                    </tr>
                }     
            </tbody>
        </table>
    }
    if(@imageFile!="")
    {
        <img src="http://localhost:100/uploads1/@imageFile" style="width:50%"/>
    }
    
}

@if (Recognition)
{
    @if (isRecognized)
    {
        <div class="d-flex align-items-center">
            <strong>@recognizedText</strong>                  
        </div>
    }
    else
    {
        <br />
        <div class="d-flex align-items-center">
            <strong>Розпізнаємо...</strong>
            <div class="spinner-border ml-auto" role="status" aria-hidden="true"></div>
        </div>
    }
}

@code {
    private List<IBrowserFile> loadedFiles = new();
    private bool isLoading;
    private bool Recognition;
    private bool isRecognized;
    private string filelocation = "";
    private string imageFile = "";
    private string folder = @"E:\Coursework\PictureRecognition\PictureRecognition\uploads1";
    private string recognizedText = "";
    private List<string> splitted;

    private async Task LoadFiles(InputFileChangeEventArgs e)
    {
        Recognition = false;
        isLoading = true;
        loadedFiles.Clear();

        foreach (var file in e.GetMultipleFiles())
        {
            try
            {
                loadedFiles.Add(file);

                imageFile = file.Name;
                var path = Path.Combine(folder, imageFile);

                await using FileStream fs = new(path, FileMode.Create);
                await file.OpenReadStream(10000000000).CopyToAsync(fs);
                filelocation = path;
            }
            catch (Exception ex)
            {

            }
        }

        isLoading = false;
    }

    private async Task RecognizeImage()
    {
        Recognition = true;
        Dictionary<string, string> labelsUa = new Dictionary<string, string>()
    {
            {"civilianaircraft", "цивільний літак"},
            {"civiliancar", "автомобіль" },
             {"militaryaircraft", "військовий літак" },
             {"militaryhelicopter", "військовий вертоліт" },
             {"militarytank", "військовий танк" },
             {"militarytruck", "військова вантажівка" }
    };
        try
        {
            isRecognized = false;
            var text = await imageService.GetImageClassesSymbols(filelocation, imageFile);

            splitted = text.Split(',')?.ToList();
            text = splitted.LastOrDefault("\r\n");
            text = text.Replace("\r\n", "").Replace(" ","");
            recognizedText = labelsUa[text];
            recognizedText +="\n"+splitted[0];
            isRecognized = true;
        }
        catch (Exception ex)
        {
            
            throw;
        }
       
    }
}